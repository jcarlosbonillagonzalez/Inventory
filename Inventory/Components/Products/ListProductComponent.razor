@using Entities
@using Business

<hr />

<select class="form-control" @onchange="CategoryChanged">
    <option value="">Seleccione el filtro</option>
    @foreach(var category in categories)
            {
                <option value="@category.CategoryId">@category.CategoryName</option>
            }
</select>

<table class="table table-bordered ">
    <thead class="table-dark table-hover">
        <tr>
            <th>#</th>
            <th>Referencia</th>
            <th>Nombre Producto</th>
            <th>Descripcion Producto</th>
            <th>Cantidad</th>
            <th>Categoria</th>
            
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var product in TempProducts)
            {
        <tr>
            <td>@product.ProductId</td>
            <td>@product.Referencia</td>
            <td>@product.ProductName</td>
            <td>@product.ProductDescription</td>
            <td>@product.TotalQuantity</td>
            <td>@product.CategoryId</td>
            <td><a href="product/update/@product.ProductId">Editar</a></td>


        </tr>

            }
    </tbody>
</table>


@code {
    List<ProductEntity> products = new List<ProductEntity>();
    List<ProductEntity> TempProducts = new List<ProductEntity>();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    

    protected override async Task OnInitializedAsync()
    {
        products = B_Product.ProductList();
        TempProducts = products;
        categories = B_Category.CategoryList();
    }

    private void CategoryChanged(ChangeEventArgs e)
    {
        
        TempProducts= products.Where(c => c.CategoryId.ToString() == e.Value.ToString()).ToList();
    }
}